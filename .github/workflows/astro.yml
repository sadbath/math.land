# The name of the workflow as it will appear in the "Actions" tab of your GitHub repository.
name: Deploy Astro to GitHub Pages

on:
  # This workflow runs automatically on any push to the "main" branch.
  push:
    branches: ["main"]

  # This allows you to run the workflow manually from the "Actions" tab if you need to.
  workflow_dispatch:

# These permissions are essential for the workflow to interact with GitHub Pages.
permissions:
  contents: read      # Allows the action to check out your repository's code.
  pages: write       # Allows the action to deploy to GitHub Pages.
  id-token: write    # Allows the action to authenticate with GitHub.

# This ensures that only one deployment runs at a time. If you push again while a deployment
# is in progress, the old one will be allowed to finish, and the new one will start after.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # This is a very robust script to automatically detect if you are using npm or yarn.
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # This crucial step automatically determines your GitHub Pages URL and base path.
      # It reads your repository settings to figure out where the site will be deployed.
      - name: Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Astro
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
      # The --site and --base flags use the values from the "Setup GitHub Pages" step.
      # This ensures the build is perfectly configured for deployment, overriding your astro.config.mjs if needed.

      - name: Upload production artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Astro builds to a "dist" folder by default. This uploads it.
          path: ./dist

  deploy:
    name: Deploy to GitHub Pages
    # This job requires the "build" job to have completed successfully.
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      # This URL will be displayed in the workflow's summary.
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # This action takes the artifact uploaded in the "build" job and deploys it.
